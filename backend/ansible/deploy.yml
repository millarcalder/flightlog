- name: Start services
  hosts: localhost
  vars:
    config_file: '../config/{{ env_name }}.yml'

  tasks:
    - name: Load secrets
      include_vars:
        file: '../config/secrets/{{ env_name }}.yml'
        name: secrets

    - name: Ensure namespace exists
      kubernetes.core.k8s:
        api_version: v1
        kind: Namespace
        name: flightlog
        state: present

    - name: Docker registry secret
      vars:
        docker_registry_config:
          auths:
            ghcr.io:
              auth: '{{ secrets["docker_registry_token"] | b64encode }}'
      kubernetes.core.k8s:
        namespace: flightlog
        name: flightlog-docker-registry-secret
        resource_definition:
          apiVersion: v1
          kind: Secret
          type: kubernetes.io/dockerconfigjson
          data:
            .dockerconfigjson: '{{ docker_registry_config | to_json | b64encode }}'

    - name: Deploy flightlog API
      kubernetes.core.k8s:
        name: flightlog-api
        state: present
        kubeconfig: ~/.kube/config
        namespace: flightlog
        resource_definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: flightlog-api-deployment
            labels:
              app: flightlog-api
          spec:
            replicas: 2
            selector:
              matchLabels:
                app: flightlog-api
            template:
              metadata:
                labels:
                  app: flightlog-api
              spec:
                imagePullSecrets:
                  - name: flightlog-docker-registry-secret
                containers:
                  - name: flightlog-api
                    image: 'ghcr.io/millarcalder/flightlog:{{ version }}'
                    imagePullPolicy: Always
                    ports:
                      - containerPort: 5000
                    args:
                      - production
                      - run-webapp
                    resources:
                      limits:
                        cpu: '500m'
                        memory: '500Mi'

    - name: Deploy flightlog API http port
      kubernetes.core.k8s:
        state: present
        namespace: flightlog
        kubeconfig: ~/.kube/config
        name: flightlog-api
        resource_definition:
          apiVersion: v1
          kind: Service
          spec:
            selector:
              app: flightlog-api
            ports:
              - name: http
                port: 80
                targetPort: 5000

    - name: Deploy flightlog API ingress
      kubernetes.core.k8s:
        state: present
        namespace: flightlog
        kubeconfig: ~/.kube/config
        name: flightlog
        resource_definition:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          spec:
            rules:
              - host: flightlog.kube.millarcalder.com
                http:
                  paths:
                    - path: /
                      pathType: Prefix
                      backend:
                        service:
                          name: flightlog-api
                          port:
                            number: 80
