# To build this diagram run the following command:
# d2 architecture.d2 architecture.svg -t 300 --layout elk --sketch

public_user: Public User {
  shape: person
}
wireguard_user: VPN User {
  shape: person
}

aws: Amazon Web Services {
  viewer_igc_bucket: Viewer IGC Bucket {
    shape: cylinder

    description: |md
      Not for long term storage, old files are deleted regularly.
    |
  }

  logbook_igc_bucket: Logbook IGC Bucket {
    shape: cylinder

    description: |md
      Long term storage for the logbook system.
    |
  }
}

pypi: PyPi Registry {
  igc_parser: IGC Parser {
    shape: package
  }
}

server: Hetzner Server {
  wireguard: Wireguard {
    shape: hexagon
  }
  nginx: Nginx Server {
    shape: oval
  }
  viewer_website: Viewer Website {
    shape: oval
  }
  viewer_api: Viewer API {
    shape: oval
  }
  logbook_website: Logbook Website {
    shape: oval
  }
  logbook_api: Logbook API {
    shape: oval
  }
  s3_cleanup_worker: S3 Cleanup Worker {
    shape: hexagon
  }
  sqlite: SQLite {
    shape: cylinder
  }

  wireguard -> nginx
  nginx -> viewer_website: Allow All
  nginx -> logbook_website: Allow Wireguard
  nginx -> viewer_api: Allow All
  nginx -> logbook_api: Allow Wireguard
  logbook_api -> psql
}

public_user -> server.nginx
wireguard_user -> server.wireguard

server.logbook_api -> aws.logbook_igc_bucket
server.s3_cleanup_worker -> aws.viewer_igc_bucket
server.viewer_api -> aws.viewer_igc_bucket

server.logbook_api -> pypi.igc_parser
server.viewer_api -> pypi.igc_parser
